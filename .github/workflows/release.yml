name: Release

on:
  release:
    types: [created]

jobs:
  release:
    if: startsWith(github.event.release.tag_name, 'v')
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Set version from tag
        run: |
          $tag = "${{ github.ref_name }}"
          $version = $tag -replace '^v', ''
          $versionWithRevision = ($version.Split('.') + '0')[0..3] -join '.'
          # <Version>0.0.0</Version>
          # <AssemblyVersion>0.0.0.0</AssemblyVersion>
          # <FileVersion>0.0.0.0</FileVersion>
          (Get-Content .\RNGNewAuraNotifier\RNGNewAuraNotifier.csproj) -replace '<Version>[^<]*(</Version>)', "<Version>$version</Version>" | Set-Content .\RNGNewAuraNotifier\RNGNewAuraNotifier.csproj
          (Get-Content .\RNGNewAuraNotifier\RNGNewAuraNotifier.csproj) -replace '<AssemblyVersion>[^<]*</AssemblyVersion>', "<AssemblyVersion>$versionWithRevision</AssemblyVersion>" | Set-Content .\RNGNewAuraNotifier\RNGNewAuraNotifier.csproj
          (Get-Content .\RNGNewAuraNotifier\RNGNewAuraNotifier.csproj) -replace '<FileVersion>[^<]*</FileVersion>', "<FileVersion>$versionWithRevision</FileVersion>" | Set-Content .\RNGNewAuraNotifier\RNGNewAuraNotifier.csproj
        shell: pwsh

      - name: Restore NuGet packages
        run: nuget restore RNGNewAuraNotifier.sln

      - name: Build solution
        run: dotnet publish RNGNewAuraNotifier.sln -p:PublishProfile=Publish

      - name: Upload exe to release
        uses: softprops/action-gh-release@v2
        with:
          files: RNGNewAuraNotifier/bin/Publish/RNGNewAuraNotifier.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
